<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes/>
  <visualElements>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>matriz_leds</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>clk,rst,botoes:8,nivel:3</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>/*
    Este módulo é o controlador de uma matriz de leds. Ele trata as linhas da matriz como terra e as 
    colunas como fase, logo, para ativar algo na linha 5, ele faz linhas = 01111 e ativa o que quiser
    nas colunas. 


    */

module matriz_leds (
    input clk,              // Clock principal da FPGA
    input rst,              // Botão de reset
    input [7:0] botoes,     // Entrada dos botões físicos
    input [2:0] nivel,      // Nivel atual do jogador
    output reg nivel_concluido,  // Output que avisa a UC se venceu
    output [7:0] colunas,   // Sinais para as colunas da matriz de LEDs
    output [2:0] linhas,     // Sinais para ativar linhas da matriz
    output [2:0] db_linha,
    output db_clock,
    output db_reset
);

    reg [7:0] estado_leds [7:0]; // Matriz virtual para armazenar estado das LEDs
    reg [2:0] linha_atual; // Variável para escanear as linhas
    integer i, j;

    initial begin
        for (i = 0; i &lt; 8; i = i + 1) begin
            for (j = 0; j &lt; 8; j = j + 1) begin
                    estado_leds[i][j] &lt;= 0; // Desliga todas as LEDs
            end 
        end 
        linha_atual = 0;
    end

    // Checa condição de vitória com base no nível atual
    always @(posedge clk or posedge rst) begin
        if (rst) begin
            nivel_concluido &lt;= 0;
        end else begin
            case (nivel) 
                3&apos;b000 : nivel_concluido &lt;= (estado_leds[0] == 8&apos;b11111111);
                3&apos;b001: nivel_concluido &lt;= (estado_leds[0] == 8&apos;b11111111) &amp;&amp; (estado_leds[1] == 8&apos;b11111111) &amp;&amp; (estado_leds[2] == 8&apos;b11111111);
                3&apos;b010: nivel_concluido &lt;= (estado_leds[0] == 8&apos;b11111111) &amp;&amp; (estado_leds[1] == 8&apos;b11111111) &amp;&amp; (estado_leds[2] == 8&apos;b11111111) &amp;&amp; (estado_leds[3] == 8&apos;b11111111) &amp;&amp; (estado_leds[4] == 8&apos;b11111111);
                3&apos;b011: nivel_concluido &lt;= (estado_leds[0] == 8&apos;b11111111) &amp;&amp; (estado_leds[1] == 8&apos;b11111111) &amp;&amp; (estado_leds[2] == 8&apos;b11111111) &amp;&amp; (estado_leds[3] == 8&apos;b11111111) &amp;&amp; (estado_leds[4] == 8&apos;b11111111) &amp;&amp; (estado_leds[5] == 8&apos;b11111111) &amp;&amp; (estado_leds[6] == 8&apos;b11111111);
                3&apos;b100: nivel_concluido &lt;= (estado_leds[0] == 8&apos;b11111111) &amp;&amp; (estado_leds[1] == 8&apos;b11111111) &amp;&amp; (estado_leds[2] == 8&apos;b11111111) &amp;&amp; (estado_leds[3] == 8&apos;b11111111) &amp;&amp; (estado_leds[4] == 8&apos;b11111111) &amp;&amp; (estado_leds[5] == 8&apos;b11111111) &amp;&amp; (estado_leds[6] == 8&apos;b11111111) &amp;&amp; (estado_leds[7] == 8&apos;b11111111);
                default: nivel_concluido &lt;= 0;
            endcase
        end
    end

    // Reset: Apaga todas as LEDs no início
    always @(posedge clk or posedge rst) begin
        if (rst) begin
            for (i = 0; i &lt; 8; i = i + 1) begin
                for (j = 0; j &lt; 8; j = j + 1) begin
                    estado_leds[i][j] &lt;= 0; // Desliga todas as LEDs
                end 
            end 
        end else begin
            // Controle das LEDs pelos botões
            if (botoes[0]) begin 
                estado_leds[0][0] &lt;= ~estado_leds[0][0];
                estado_leds[0][1] &lt;= ~estado_leds[0][1];
                estado_leds[0][2] &lt;= ~estado_leds[0][2];
                estado_leds[1][0] &lt;= ~estado_leds[1][0];
                estado_leds[1][1] &lt;= ~estado_leds[1][1];
                estado_leds[1][2] &lt;= ~estado_leds[1][2];
                estado_leds[2][0] &lt;= ~estado_leds[2][0];
                estado_leds[2][1] &lt;= ~estado_leds[2][1];
                estado_leds[2][2] &lt;= ~estado_leds[2][2];
            end 

            else if (botoes[1]) begin //else
                estado_leds[3][0] &lt;= ~estado_leds[3][0];
                estado_leds[3][1] &lt;= ~estado_leds[3][1];
                estado_leds[3][2] &lt;= ~estado_leds[3][2];
                estado_leds[4][0] &lt;= ~estado_leds[4][0];
                estado_leds[4][1] &lt;= ~estado_leds[4][1];
                estado_leds[5][0] &lt;= ~estado_leds[5][0];
                estado_leds[5][1] &lt;= ~estado_leds[5][1];
                estado_leds[6][0] &lt;= ~estado_leds[6][0];
                estado_leds[6][1] &lt;= ~estado_leds[6][1];
            end
            else if (botoes[2]) begin
                estado_leds[4][2] &lt;= ~estado_leds[4][2];
                estado_leds[5][2] &lt;= ~estado_leds[5][2];
                estado_leds[5][3] &lt;= ~estado_leds[5][3];
                estado_leds[6][2] &lt;= ~estado_leds[6][2];
                estado_leds[6][3] &lt;= ~estado_leds[6][3];
                estado_leds[7][0] &lt;= ~estado_leds[7][0];
                estado_leds[7][1] &lt;= ~estado_leds[7][1];
                estado_leds[7][2] &lt;= ~estado_leds[7][2];
                estado_leds[7][3] &lt;= ~estado_leds[7][3];
            end
        
            else if (botoes[3]) begin
                estado_leds[5][3] &lt;= ~estado_leds[5][3];
                estado_leds[5][4] &lt;= ~estado_leds[5][4];
                estado_leds[5][5] &lt;= ~estado_leds[5][5];
                estado_leds[6][3] &lt;= ~estado_leds[6][3];
                estado_leds[6][4] &lt;= ~estado_leds[6][4];
                estado_leds[6][5] &lt;= ~estado_leds[6][5];
                estado_leds[7][3] &lt;= ~estado_leds[7][3];
                estado_leds[7][4] &lt;= ~estado_leds[7][4];
                estado_leds[7][5] &lt;= ~estado_leds[7][5];
            end
            else if (botoes[4]) begin
                estado_leds[0][3] &lt;= ~estado_leds[0][3];
                estado_leds[0][4] &lt;= ~estado_leds[0][4];
                estado_leds[1][3] &lt;= ~estado_leds[1][3];
                estado_leds[1][4] &lt;= ~estado_leds[1][4];
                estado_leds[2][3] &lt;= ~estado_leds[2][3];
                estado_leds[2][4] &lt;= ~estado_leds[2][4];
                estado_leds[3][3] &lt;= ~estado_leds[3][3];
                estado_leds[3][4] &lt;= ~estado_leds[3][4];
                estado_leds[4][3] &lt;= ~estado_leds[4][3];
            end
            else if (botoes[5]) begin
                estado_leds[0][5] &lt;= ~estado_leds[0][5];
                estado_leds[1][5] &lt;= ~estado_leds[1][5];
                estado_leds[2][5] &lt;= ~estado_leds[2][5];
                estado_leds[2][6] &lt;= ~estado_leds[2][6];
                estado_leds[3][5] &lt;= ~estado_leds[3][5];
                estado_leds[3][6] &lt;= ~estado_leds[3][6];
                estado_leds[4][4] &lt;= ~estado_leds[4][4];
                estado_leds[4][5] &lt;= ~estado_leds[4][5];
                estado_leds[4][6] &lt;= ~estado_leds[4][6];
            end
            else if (botoes[6]) begin
                estado_leds[5][5] &lt;= ~estado_leds[5][5];
                estado_leds[5][6] &lt;= ~estado_leds[5][6];
                estado_leds[5][7] &lt;= ~estado_leds[5][7];
                estado_leds[6][5] &lt;= ~estado_leds[6][5];
                estado_leds[6][6] &lt;= ~estado_leds[6][6];
                estado_leds[6][7] &lt;= ~estado_leds[6][7];
                estado_leds[7][5] &lt;= ~estado_leds[7][5];
                estado_leds[7][6] &lt;= ~estado_leds[7][6];
                estado_leds[7][7] &lt;= ~estado_leds[7][7];
            end
            else if (botoes[7]) begin
                estado_leds[0][6] &lt;= ~estado_leds[0][6];
                estado_leds[0][7] &lt;= ~estado_leds[0][7];
                estado_leds[1][6] &lt;= ~estado_leds[1][6];
                estado_leds[1][7] &lt;= ~estado_leds[1][7];
                estado_leds[2][6] &lt;= ~estado_leds[2][6];
                estado_leds[2][7] &lt;= ~estado_leds[2][7];
                estado_leds[3][6] &lt;= ~estado_leds[3][6];
                estado_leds[3][7] &lt;= ~estado_leds[3][7];
                estado_leds[4][7] &lt;= ~estado_leds[4][7];
            end
        end
    end

    // Ciclo para alternar entre as linhas da matriz
    always @(posedge clk) begin
        linha_atual &lt;= linha_atual + 1; // Soma 1 a cada pulso de clock 
    end

    // Ativação da linha atual (apenas uma linha por vez)
    assign linhas = linha_atual;
    

    // Colunas recebem valores da linha ativa
    assign colunas = estado_leds[linha_atual];  

    assign db_linha = linha_atual;
    assign db_clock = clk;
    assign db_reset = rst;

endmodule</string>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>nivel_concluido,colunas:8,linhas:3,db_linha:3,db_clock,db_reset</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>12</int>
        </entry>
      </elementAttributes>
      <pos x="620" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Clock</elementName>
      <elementAttributes>
        <entry>
          <string>runRealTime</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>clk</string>
        </entry>
        <entry>
          <string>Frequency</string>
          <int>50000000</int>
        </entry>
      </elementAttributes>
      <pos x="400" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>botao[0]</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>botao[1]</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>botao[2]</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="280"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>botao[3]</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>botao[4]</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>botao[5]</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="400"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>1,1,1,1,1,1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="540" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>botao[6]</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>botao[7]</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>rst</string>
        </entry>
      </elementAttributes>
      <pos x="480" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>nivel</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="480" y="560"/>
    </visualElement>
    <visualElement>
      <elementName>LED</elementName>
      <elementAttributes/>
      <pos x="1060" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>LedMatrix</elementName>
      <elementAttributes>
        <entry>
          <string>ledPersistence</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>Label</string>
          <string>matriz_leds</string>
        </entry>
      </elementAttributes>
      <pos x="1060" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>DipSwitch</elementName>
      <elementAttributes/>
      <pos x="200" y="0"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="340" y="320"/>
      <p2 x="460" y="320"/>
    </wire>
    <wire>
      <p1 x="500" y="320"/>
      <p2 x="540" y="320"/>
    </wire>
    <wire>
      <p1 x="340" y="480"/>
      <p2 x="540" y="480"/>
    </wire>
    <wire>
      <p1 x="480" y="160"/>
      <p2 x="580" y="160"/>
    </wire>
    <wire>
      <p1 x="420" y="260"/>
      <p2 x="540" y="260"/>
    </wire>
    <wire>
      <p1 x="600" y="260"/>
      <p2 x="620" y="260"/>
    </wire>
    <wire>
      <p1 x="960" y="100"/>
      <p2 x="1060" y="100"/>
    </wire>
    <wire>
      <p1 x="600" y="200"/>
      <p2 x="620" y="200"/>
    </wire>
    <wire>
      <p1 x="340" y="200"/>
      <p2 x="420" y="200"/>
    </wire>
    <wire>
      <p1 x="860" y="200"/>
      <p2 x="960" y="200"/>
    </wire>
    <wire>
      <p1 x="340" y="360"/>
      <p2 x="480" y="360"/>
    </wire>
    <wire>
      <p1 x="480" y="300"/>
      <p2 x="540" y="300"/>
    </wire>
    <wire>
      <p1 x="340" y="400"/>
      <p2 x="500" y="400"/>
    </wire>
    <wire>
      <p1 x="340" y="240"/>
      <p2 x="540" y="240"/>
    </wire>
    <wire>
      <p1 x="560" y="240"/>
      <p2 x="620" y="240"/>
    </wire>
    <wire>
      <p1 x="860" y="240"/>
      <p2 x="1060" y="240"/>
    </wire>
    <wire>
      <p1 x="480" y="560"/>
      <p2 x="600" y="560"/>
    </wire>
    <wire>
      <p1 x="520" y="340"/>
      <p2 x="540" y="340"/>
    </wire>
    <wire>
      <p1 x="460" y="280"/>
      <p2 x="540" y="280"/>
    </wire>
    <wire>
      <p1 x="340" y="280"/>
      <p2 x="420" y="280"/>
    </wire>
    <wire>
      <p1 x="400" y="120"/>
      <p2 x="600" y="120"/>
    </wire>
    <wire>
      <p1 x="340" y="440"/>
      <p2 x="520" y="440"/>
    </wire>
    <wire>
      <p1 x="420" y="220"/>
      <p2 x="540" y="220"/>
    </wire>
    <wire>
      <p1 x="580" y="220"/>
      <p2 x="620" y="220"/>
    </wire>
    <wire>
      <p1 x="860" y="220"/>
      <p2 x="1060" y="220"/>
    </wire>
    <wire>
      <p1 x="480" y="300"/>
      <p2 x="480" y="360"/>
    </wire>
    <wire>
      <p1 x="560" y="220"/>
      <p2 x="560" y="240"/>
    </wire>
    <wire>
      <p1 x="960" y="100"/>
      <p2 x="960" y="200"/>
    </wire>
    <wire>
      <p1 x="500" y="320"/>
      <p2 x="500" y="400"/>
    </wire>
    <wire>
      <p1 x="420" y="260"/>
      <p2 x="420" y="280"/>
    </wire>
    <wire>
      <p1 x="420" y="200"/>
      <p2 x="420" y="220"/>
    </wire>
    <wire>
      <p1 x="580" y="160"/>
      <p2 x="580" y="220"/>
    </wire>
    <wire>
      <p1 x="520" y="340"/>
      <p2 x="520" y="440"/>
    </wire>
    <wire>
      <p1 x="600" y="120"/>
      <p2 x="600" y="200"/>
    </wire>
    <wire>
      <p1 x="600" y="260"/>
      <p2 x="600" y="560"/>
    </wire>
    <wire>
      <p1 x="460" y="280"/>
      <p2 x="460" y="320"/>
    </wire>
    <wire>
      <p1 x="540" y="360"/>
      <p2 x="540" y="480"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>